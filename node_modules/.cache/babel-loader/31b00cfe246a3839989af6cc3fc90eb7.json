{"ast":null,"code":"import _classCallCheck from\"C:/Users/77393/Desktop/quiz5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/77393/Desktop/quiz5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/77393/Desktop/quiz5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/77393/Desktop/quiz5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{withStyles}from'@material-ui/core/styles';import List from'@material-ui/core/List';import ToDoListChildItem from'./ToDoListChildItem';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=function useStyles(theme){return{};};var ToDoListItem=/*#__PURE__*/function(_React$Component){_inherits(ToDoListItem,_React$Component);var _super=_createSuper(ToDoListItem);function ToDoListItem(props){_classCallCheck(this,ToDoListItem);return _super.call(this,props);}_createClass(ToDoListItem,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}// seems this function won't called on update\n},{key:\"renderItemProvider\",value:function renderItemProvider(){console.log('update');var MsgArray=[];this.props.getMessageItem().forEach(function(item,index,array){MsgArray.push(/*#__PURE__*/_jsx(ToDoListChildItem,{useText:item}));});return MsgArray;}},{key:\"render\",value:function render(){var classes=this.props.classes;return/*#__PURE__*/_jsx(List,{component:\"nav\",\"aria-label\":\"todo list\",children:this.renderItemProvider()});}}]);return ToDoListItem;}(React.Component);export default withStyles(useStyles)(ToDoListItem);","map":{"version":3,"sources":["C:/Users/77393/Desktop/quiz5/src/js/View/ToDoComponent/ToDoListItem.js"],"names":["React","withStyles","List","ToDoListChildItem","useStyles","theme","ToDoListItem","props","console","log","MsgArray","getMessageItem","forEach","item","index","array","push","classes","renderItemProvider","Component"],"mappings":"4jBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,QAAY,EAAZ,EAAlB,C,GAIMC,CAAAA,Y,wHACF,sBAAYC,KAAZ,CAAkB,4DACRA,KADQ,EAEjB,C,0DACD,4BAAmB,CAAE,C,oCACrB,+BAAsB,CAAE,CACxB;kCACA,6BAAoB,CAClBC,OAAO,CAACC,GAAR,CAAY,QAAZ,EACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,KAAKH,KAAL,CAAWI,cAAX,GAA4BC,OAA5B,CAAoC,SAASC,IAAT,CAAeC,KAAf,CAAsBC,KAAtB,CAA6B,CAC/DL,QAAQ,CAACM,IAAT,cAAe,KAAC,iBAAD,EAAmB,OAAO,CAAEH,IAA5B,EAAf,EACD,CAFD,EAGA,MAAOH,CAAAA,QAAP,CACD,C,sBAED,iBAAQ,CACJ,GAAMO,CAAAA,OAAO,CAAG,KAAKV,KAAL,CAAWU,OAA3B,CACA,mBACE,KAAC,IAAD,EAAM,SAAS,CAAC,KAAhB,CAAsB,aAAW,WAAjC,UACG,KAAKC,kBAAL,EADH,EADF,CAOH,C,0BAzBsBlB,KAAK,CAACmB,S,EA4BjC,cAAelB,CAAAA,UAAU,CAACG,SAAD,CAAV,CAAsBE,YAAtB,CAAf","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nimport ToDoListChildItem from './ToDoListChildItem';\n\nconst useStyles = (theme) => ({\n\n});\n\nclass ToDoListItem extends React.Component{    \n    constructor(props){\n        super(props);       \n    }\n    componentDidMount(){}\n    componentWillUnmount(){}\n    // seems this function won't called on update\n    renderItemProvider(){\n      console.log('update');\n      let MsgArray = [];\n      this.props.getMessageItem().forEach(function(item, index, array) {\n        MsgArray.push((<ToDoListChildItem useText={item}/>));\n      });\n      return MsgArray;\n    }\n\n    render(){\n        const classes = this.props.classes;\n        return(\n          <List component=\"nav\" aria-label=\"todo list\">\n            {this.renderItemProvider()}\n            {/* <ToDoListChildItem useText={\"Msg1\"}/>\n            <ToDoListChildItem useText={\"Msg2\"}/> */}\n          </List>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ToDoListItem)"]},"metadata":{},"sourceType":"module"}